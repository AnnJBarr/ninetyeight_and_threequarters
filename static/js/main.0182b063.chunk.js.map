{"version":3,"sources":["components/Header.js","components/AddTask.js","components/RemainingTasks.js","components/TaskItem.js","components/ToDoTasks.js","components/CompletedTasks.js","components/TasksArea.js","components/Footer.js","App.js","index.js"],"names":["Header","className","icon","faClipboardList","React","Component","AddTask","props","context","updateNewItemText","event","setState","newItemText","target","value","handleClick","preventDefault","addNewTaskFunc","state","selectedDate","handleDateChange","e","console","log","moment","format","handleInfiniteDateChange","onChange","bind","date","this","id","faNotesMedical","aria-label","type","placeholder","theme","selectionColor","textColor","default","active","weekdayColor","headerColor","floatingNav","background","color","chevron","displayOptions","layout","showHeader","shouldHeaderAnimate","showWeekdays","width","height","rowHeight","minDate","Date","onSelect","onClick","disabled","length","RemainingTasks","faTasks","count","TaskItem","doneTask","tasksCopy","tasks","slice","done","undoTask","handleDoneClick","doneTaskFunc","handleUndoClick","unDoTaskFunc","handleDelete","deleteTaskFunc","faDotCircle","text","dateCompleted","fromNow","dueBy","includes","faUndo","faClipboardCheck","faTrashAlt","ToDoTasks","dateSortedIncomplete","sort","a","b","date_added","map","task","task_name","key","task_id","dateAdded","date_completed","due_by","CompletedTasks","dateSortedCompleted","doneCount","TasksArea","completedTasks","filter","t","incompleteTasks","Footer","faQuoteLeft","faQuoteRight","title","App","addNewTask","taskText","dueByDate","newTask","axios","post","then","response","taskFromDB","data","push","catch","err","updatedTasks","selectedTask","forEach","put","deleteTask","delete","remainingTasks","convertDates","get","tasksfromDB","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0182b063.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends React.Component {\n    render () {\n        return (\n            <div className=\"text-white text-center\">\n                <h1>Task Manager <FontAwesomeIcon icon = {faClipboardList} /></h1>\n                <h5>98 and \t&#190; &#160;percent</h5>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faNotesMedical } from '@fortawesome/free-solid-svg-icons';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nimport moment from \"moment\";\nimport './AddTask.css';\n\nclass AddTask extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            newItemText: \"\",\n            selectedDate: moment().format(\"YYYY-MM-DD\")\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    updateNewItemText = (event) => {\n        this.setState({\n            newItemText: event.target.value,\n        })\n    }\n\n    handleClick = (event) => {\n        event.preventDefault();\n        this.props.addNewTaskFunc(this.state.newItemText, this.state.selectedDate);\n        this.setState({\n            newItemText: \"\"\n        });\n    }\n\n    onChange(date) {\n        this.setState({\n            selectedDate: moment(date).format(\"YYYY-MM-DD\")\n\n        });\n\n    }\n    handleDateChange = e => {\n        console.log(e)\n        console.log(moment(e).format(\"YYYY-MM-DD\"))\n        console.log('this is what happens when I selected date ' + e)\n        this.setState({\n            selectedDate: moment(e).format(\"YYYY-MM-DD\")\n        });\n    }\n\n    handleInfiniteDateChange = e => {\n        this.setState({\n            selectedDate: moment(e).format(\"YYYY-MM-DD\")\n        });\n    }\n\n\n    render() {\n        return (\n            <div id=\"add-task\" className=\"row appRow\">\n                <div className=\"mx-auto col-12 col-lg-9\">\n                    <div className=\"card bg-transparent text-white\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Add new task to do <FontAwesomeIcon icon={faNotesMedical} /></h5>\n                            <div className=\"card-text\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\">Enter your next task</span>\n                                            </div>\n                                            <textarea className=\"form-control\"\n                                                aria-label=\"With textarea\"\n                                                type=\"text\"\n                                                id=\"newItem\"\n                                                placeholder=\"Type an item here (max 160 characters)\"\n                                                value={this.state.newItemText}\n                                                onChange={this.updateNewItemText}></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                <div className=\"col-12 col-lg-3 my-3\">\n                                    Due by (please select)\n                                    </div>\n                                <div className=\"col-12 col-lg-8 my-3\">\n                                    <InfiniteCalendar className=\"form-control\"                                     \n                                        theme={{\n                                            selectionColor: 'rgb(128, 0, 128)',\n                                            textColor: {\n                                                default: '#333',\n                                                active: '#FFF'\n                                            },\n                                            weekdayColor: 'rgb(146, 118, 255)',\n                                            headerColor: 'rgb(128, 0, 128)',\n                                            floatingNav: {\n                                                background: 'rgba(128, 0, 128, 0.96)',\n                                                color: '#FFF',\n                                                chevron: '#FFA726'\n                                            }\n                                        }}\n                                        displayOptions={{\n                                            layout: 'portrait',\n                                            showHeader: true,\n                                            shouldHeaderAnimate: false,\n                                            showWeekdays: false\n                                        }}\n                                        width={297}\n                                        height={67}\n                                        rowHeight={32}\n                                        minDate={new Date()}\n                                        onSelect={this.handleInfiniteDateChange}\n                                    />\n                                </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <button className=\"btn btn-outline-light\" onClick={this.handleClick} disabled={this.state.newItemText.length === 0 || this.state.newItemText.length > 160}>Add task</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        );\n    }\n}\n\nexport default AddTask;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\n\nclass RemainingTasks extends React.Component {\n    render() {\n        return (\n            <div className=\"row appRow d-none d-md-block\">\n                <div className=\"mx-auto col-12 col-lg-8\">\n                    <div className=\"card bg-transparent text-white\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Open Tasks <FontAwesomeIcon icon={faTasks} /></h5>\n                            <div className=\"card-text\">You have {this.props.count} tasks to complete</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RemainingTasks;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle, faClipboardCheck, faTrashAlt, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport moment from \"moment\";\n\nclass TaskItem extends React.Component {\n\n    doneTask = () => {\n        const tasksCopy = this.state.tasks.slice();\n        tasksCopy.done = true\n\n        this.setState({\n            tasks: tasksCopy\n        });\n    }\n\n    undoTask = () => {\n        const tasksCopy = this.state.tasks.slice();\n        tasksCopy.done = false\n\n        this.setState({\n            tasks: tasksCopy\n        });\n    }\n\n    handleDoneClick = () => {\n        this.props.doneTaskFunc(this.props.id)\n    }\n\n    handleUndoClick = () => {\n        this.props.unDoTaskFunc(this.props.id)\n    }\n\n    handleDelete = () => {\n        this.props.deleteTaskFunc(this.props.id);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"row taskRow\">\n                <div className=\"col-1\">\n                    {this.props.done === 1 ? <div id=\"donedot\"><FontAwesomeIcon icon={faDotCircle} /></div> : <div id=\"tododot\"><FontAwesomeIcon icon={faDotCircle} /></div>}\n                </div>\n\n                <div className=\"col-6 col-md-10 col-lg-6\">\n                    {this.props.done === 1 ? <div id=\"doneid\"><h6>{this.props.text}</h6></div> : <div><h6>{this.props.text}</h6></div>}\n                </div>\n                <div className=\"col-4 col-lg-3\">\n                    {this.props.done === 1 ? <div id=\"doneid\"><h6>\n                        Done {moment(this.props.dateCompleted, \"YYYY-MM-DD\").fromNow()}\n                    </h6></div> : <h6 className={moment(this.props.dueBy, \"YYYY-MM-DD\").fromNow().includes(\"ago\") ? \"overdue\" : \"\"}>\n                            Due {moment(this.props.dueBy, \"YYYY-MM-DD\").fromNow()}\n                        </h6>}\n                </div>\n                <div className=\"col-2 col-lg-1\">\n                    {this.props.done === 1 ? <button id=\"icon-buttons\" className=\"btn\" onClick={this.handleUndoClick}><FontAwesomeIcon icon={faUndo} /></button> : <button id=\"icon-buttons\" className=\"btn\" onClick={this.handleDoneClick} disabled={this.props.done}><FontAwesomeIcon icon={faClipboardCheck} /></button>}\n                </div>\n                <div className=\"col-1\">\n                    <button id=\"icon-buttons\" className=\"btn\" onClick={this.handleDelete} ><FontAwesomeIcon icon={faTrashAlt} /></button>\n                </div>\n\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default TaskItem;","import React from \"react\";\nimport TaskItem from './TaskItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\nclass ToDoTasks extends React.Component {\n    render() {\n        const tasks = this.props.tasks;\n        const dateSortedIncomplete = tasks.sort((a, b) => a.date_added - b.date_added);\n\n        return (\n            <div id=\"todo\" className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Tasks to do {this.props.count > 0 ? <span>({this.props.count})</span> : \"\"} <FontAwesomeIcon icon={faClipboardList} /></h5>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-text\" >\n                        {dateSortedIncomplete.map(task => {\n                            return <TaskItem doneTaskFunc={this.props.doneTaskFunc} deleteTaskFunc={this.props.deleteTaskFunc} text={task.task_name} done={task.done} key={task.task_id} id={task.task_id} dateAdded={task.date_added} dateCompleted={task.date_completed} dueBy={task.due_by} />\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoTasks;","import React from \"react\";\nimport TaskItem from './TaskItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\n\nclass CompletedTasks extends React.Component {\n    render() {\n        const tasks = this.props.tasks;\n        const dateSortedCompleted = tasks.sort((a, b) => b.date_completed - a.date_completed);\n        return (\n            <div id=\"done\" className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Completed {this.props.doneCount > 0 ? <span>({this.props.doneCount})</span> : \"\"} <FontAwesomeIcon icon={faClipboardCheck} /></h5>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-text\">\n                        {dateSortedCompleted.map(task => {\n                            return <TaskItem unDoTaskFunc={this.props.unDoTaskFunc} deleteTaskFunc={this.props.deleteTaskFunc} text={task.task_name} done={task.done} key={task.task_id} id={task.task_id} dateAdded={task.date_added} dateCompleted={task.date_completed} dueBy={task.due_by} />\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default CompletedTasks;","import React from \"react\";\nimport './TasksArea.css';\nimport ToDoTasks from \"./ToDoTasks\";\nimport CompletedTasks from \"./CompletedTasks\";\n\nclass TasksArea extends React.Component {\n    render() {\n        const completedTasks = this.props.tasks.filter(t => {\n            return t.done === 1;\n        });\n\n        const incompleteTasks = this.props.tasks.filter(t => {\n            return t.done === 0;\n        });\n        return (\n            <div className=\"row mx-auto appRow\">\n                <div id=\"to-do-tasks\" className=\"col-12 col-lg-6\">\n                    <ToDoTasks tasks={incompleteTasks} deleteTaskFunc={this.props.deleteTaskFunc} doneTaskFunc={this.props.doneTaskFunc} count={this.props.count} doneCount={this.props.doneCount}/>\n                </div>\n                <div id=\"done-tasks\" className=\"col-12 col-lg-6\">\n                    <CompletedTasks tasks={completedTasks} deleteTaskFunc={this.props.deleteTaskFunc} unDoTaskFunc={this.props.unDoTaskFunc} count={this.props.count} doneCount={this.props.doneCount}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default TasksArea;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft, faQuoteRight} from '@fortawesome/free-solid-svg-icons';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"row appRow\">\n                <div className=\"mx-auto col-12 col-lg-9\">\n                    <div className=\"card bg-transparent text-white font-weight-lighter\">\n                        <div className=\"card-body\">\n                            <blockquote className=\"blockquote\">\n                                <div className=\"mb-0\"><FontAwesomeIcon icon={faQuoteLeft} /> And will you succeed? Yes! You will, indeed! (98 and &#190; &#160;percent guaranteed.) <FontAwesomeIcon icon={faQuoteRight} /></div>\n                                <footer className=\"blockquote-footer text-white\">Dr. Seuss <cite title=\"Source Title\">Oh the places you’ll go</cite></footer>\n                            </blockquote>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\"\nimport './App.css';\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Header from './components/Header';\nimport AddTask from './components/AddTask';\nimport RemainingTasks from './components/RemainingTasks';\nimport TasksArea from './components/TasksArea';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n\n  state = {\n    tasks: []\n    //task_id | task_name  | due_by     | done | date_added | date_completed | owner_id\n  };\n\n  componentDidMount() {\n    axios.get(\"https://xo0mntjodk.execute-api.eu-west-2.amazonaws.com/dev/tasks\")\n      .then((response) => {\n        const tasksfromDB = response.data;\n        this.setState({\n          tasks: tasksfromDB\n        })\n      })\n      .catch((err) => {\n        console.log(\"Error getting task data\", err);\n      })\n  }\n\n  addNewTask = (taskText, dueByDate) => {\n    const tasksCopy = this.state.tasks.slice();\n    const newTask = {\n      task_name: taskText,\n      done: 0,\n      date_added: moment().format(\"YYYY-MM-DD\"),\n      date_completed: new Date(),\n      due_by: dueByDate\n    };\n\n    axios.post(\"https://xo0mntjodk.execute-api.eu-west-2.amazonaws.com/dev/tasks\", newTask)\n      .then((response) => {\n        const taskFromDB = response.data;\n\n        tasksCopy.push(taskFromDB);\n\n        this.setState({\n          tasks: tasksCopy\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error creating task\", err)\n      })\n  }\n\n  doneTask = id => {\n    const updatedTasks = this.state.tasks;\n    let selectedTask = {};\n    updatedTasks.forEach(task => {\n      if (task.task_id === id) {\n        task.done = 1;\n        task.date_completed = new Date()\n        selectedTask = task;\n      }\n    });\n    axios.put(`https://xo0mntjodk.execute-api.eu-west-2.amazonaws.com/dev/tasks/${id}`, selectedTask)\n      .then((response) => {\n        this.setState({\n          tasks: updatedTasks\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error updating item\", err)\n      });\n  }\n\n  undoTask = id => {\n    const updatedTasks = this.state.tasks;\n    let selectedTask = {};\n    updatedTasks.forEach(task => {\n      if (task.task_id === id) {\n        task.done = 0;\n        selectedTask = task;\n      }\n    });\n    axios.put(`https://xo0mntjodk.execute-api.eu-west-2.amazonaws.com/dev/tasks/${id}`, selectedTask)\n      .then((response) => {\n        this.setState({\n          tasks: updatedTasks\n        });\n      })\n      .catch((err) => {\n        console.log(err)\n      });\n  }\n\n  deleteTask = id => {\n    axios.delete(\"https://xo0mntjodk.execute-api.eu-west-2.amazonaws.com/dev/tasks/\" + id)\n      .then((response) => {\n        const remainingTasks = this.state.tasks.filter(task => {\n          return task.task_id !== id\n        });\n\n        this.setState({\n          tasks: remainingTasks\n        })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  convertDates = (tasks) => {\n    return tasks.map(task => {\n      task.date_added = new Date(task.date_added);\n      task.due_by = new Date(task.due_by);\n      task.date_completed = new Date(task.date_completed);\n      return task\n    })\n  }\n\n  render() {\n\n    const incompleteTasks = this.state.tasks.filter(task => {\n      return task.done ? 0 : 1\n    });\n\n    const completedTasks = this.state.tasks.filter(task => {\n      return task.done;\n    });\n    const count = incompleteTasks.filter(item => item.done === 0).length\n\n    const doneCount = completedTasks.filter(item => item.done === 1).length\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <AddTask addNewTaskFunc={this.addNewTask} />\n        <RemainingTasks count={count} doneCount={doneCount} />\n        <TasksArea tasks={this.state.tasks} doneTaskFunc={this.doneTask} unDoTaskFunc={this.undoTask} deleteTaskFunc={this.deleteTask} count={count} doneCount={doneCount} />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}