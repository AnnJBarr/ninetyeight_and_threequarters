{"version":3,"sources":["components/Header.js","components/AddTask.js","components/RemainingTasks.js","components/TaskItem.js","components/ToDoTasks.js","components/CompletedTasks.js","components/TasksArea.js","components/Footer.js","App.js","index.js"],"names":["Header","className","icon","faClipboardList","React","Component","AddTask","props","context","updateNewItemText","event","setState","newItemText","target","value","handleClick","preventDefault","addNewTaskFunc","state","selectedDate","handleDateChange","e","console","log","moment","format","handleInfiniteDateChange","onChange","bind","date","this","id","faNotesMedical","aria-label","type","placeholder","theme","selectionColor","textColor","default","active","weekdayColor","headerColor","floatingNav","background","color","chevron","displayOptions","layout","showHeader","shouldHeaderAnimate","showWeekdays","width","window","innerWidth","height","innerHeight","rowHeight","minDate","Date","onSelect","onClick","disabled","length","RemainingTasks","faTasks","count","TaskItem","doneTask","tasksCopy","tasks","slice","done","handleDoneClick","doneTaskFunc","handleDelete","deleteTaskFunc","faDotCircle","text","dateCompleted","fromNow","dueBy","includes","faClipboardCheck","faTrashAlt","ToDoTasks","dateSortedIncomplete","sort","a","b","dateAdded","map","task","key","CompletedTasks","dateSortedCompleted","TasksArea","completedTasks","filter","t","incompleteTasks","Footer","faQuoteLeft","faQuoteRight","title","App","uuid","addNewTask","taskText","dueByDate","newTask","push","updatedTasks","deleteTask","remainingTasks","convertDates","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25f093d6.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends React.Component {\n    render () {\n        return (\n            <div className=\"text-white text-center\">\n                <h1>Task Manager <FontAwesomeIcon icon = {faClipboardList} /></h1>\n                <h5>98 and \t&#190; &#160;percent</h5>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faNotesMedical } from '@fortawesome/free-solid-svg-icons';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nimport moment from \"moment\";\n\n\nclass AddTask extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            newItemText: \"\",\n            selectedDate: moment().format(\"YYYY-MM-DD\")\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    updateNewItemText = (event) => {\n        this.setState({\n            newItemText: event.target.value,\n        })\n    }\n\n    handleClick = (event) => {\n        event.preventDefault();\n        this.props.addNewTaskFunc(this.state.newItemText, this.state.selectedDate);\n        this.setState({\n            newItemText: \"\"\n        });\n    }\n\n    onChange(date) {\n        this.setState({\n            selectedDate: moment(date).format(\"YYYY-MM-DD\")\n\n        });\n\n    }\n    handleDateChange = e => {\n        console.log(e)\n        console.log(moment(e).format(\"YYYY-MM-DD\"))\n        console.log('this is what happens when I selected date ' + e)\n        this.setState({\n            selectedDate: moment(e).format(\"YYYY-MM-DD\")\n        });\n    }\n\n    handleInfiniteDateChange = e => {\n        this.setState({\n            selectedDate: moment(e).format(\"YYYY-MM-DD\")\n        });\n    }\n\n\n    render() {\n        return (\n            <div id=\"add-task\" className=\"row appRow\">\n                <div className=\"mx-auto col-12 col-lg-9\">\n                    <div className=\"card bg-transparent text-white\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Add new task to do <FontAwesomeIcon icon={faNotesMedical} /></h5>\n                            <div className=\"card-text\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\">Enter your next task</span>\n                                            </div>\n                                            <textarea className=\"form-control\"\n                                                aria-label=\"With textarea\"\n                                                type=\"text\"\n                                                id=\"newItem\"\n                                                placeholder=\"Type an item here (max 160 characters)\"\n                                                value={this.state.newItemText}\n                                                onChange={this.updateNewItemText}></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4\">\n                                        <br />\n                                        <br />\n                                        Due by (please select)\n                                    </div>\n                                    <div className=\"col-5\">\n                                        <InfiniteCalendar className=\"form-control\"\n                                            theme={{\n                                                selectionColor: 'rgb(128, 0, 128)',\n                                                textColor: {\n                                                    default: '#333',\n                                                    active: '#FFF'\n                                                },\n                                                weekdayColor: 'rgb(146, 118, 255)',\n                                                headerColor: 'rgb(128, 0, 128)',\n                                                floatingNav: {\n                                                    background: 'rgba(128, 0, 128, 0.96)',\n                                                    color: '#FFF',\n                                                    chevron: '#FFA726'\n                                                }\n                                            }}\n                                            displayOptions={{\n                                                layout: 'portrait',\n                                                showHeader: true,\n                                                shouldHeaderAnimate: false,\n                                                showWeekdays: false\n                                            }}\n                                            width={(window.innerWidth <= 305) ? window.innerWidth : 305}\n                                            height={window.innerHeight - 730}\n                                            rowHeight={32}\n                                            minDate={new Date()}\n                                            onSelect={this.handleInfiniteDateChange}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <button className=\"btn btn-outline-light\" onClick={this.handleClick} disabled={this.state.newItemText.length === 0 || this.state.newItemText.length > 160}>Add task</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        );\n    }\n}\n\nexport default AddTask;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\n\nclass RemainingTasks extends React.Component {\n    render() {\n        return (\n            <div className=\"row appRow d-none d-md-block\">\n                <div className=\"mx-auto col-12 col-lg-8\">\n                    <div className=\"card bg-transparent text-white\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Open Tasks <FontAwesomeIcon icon={faTasks} /></h5>\n                            <div className=\"card-text\">You have {this.props.count} tasks to complete</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RemainingTasks;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle, faClipboardCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport moment from \"moment\";\n\nclass TaskItem extends React.Component {\n\n    doneTask = () => {\n        const tasksCopy = this.state.tasks.slice();\n        tasksCopy.done = true\n\n        this.setState({\n            tasks: tasksCopy\n        });\n    }\n\n    handleDoneClick = () => {\n        this.props.doneTaskFunc(this.props.id)\n    }\n\n    handleDelete = () => {\n        this.props.deleteTaskFunc(this.props.id);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"row taskRow\">\n                <div className=\"col-1\">\n                    {this.props.done === true ? <div id=\"donedot\"><FontAwesomeIcon icon={faDotCircle} /></div> : <div id=\"tododot\"><FontAwesomeIcon icon={faDotCircle} /></div>}\n                </div>\n\n                <div className=\"col-6\">\n                    {this.props.done === true ? <div id=\"doneid\"><h6>{this.props.text}</h6></div> : <div><h6>{this.props.text}</h6></div>}\n                </div>\n                <div className=\"col-3\">\n                    {this.props.done === true ? <div id=\"doneid\"><h6>\n                        Done {moment(this.props.dateCompleted, \"YYYY-MM-DD\").fromNow()}\n                    </h6></div> : <h6 className={moment(this.props.dueBy, \"YYYY-MM-DD\").fromNow().includes(\"ago\") ? \"overdue\" : \"\"}>\n                            Due {moment(this.props.dueBy, \"YYYY-MM-DD\").fromNow()}\n                        </h6>}\n                </div>\n                <div className=\"col-1\">\n                    {this.props.done === true ? <div id=\"doneid\"></div> : <button id=\"icon-buttons\" className=\"btn\" onClick={this.handleDoneClick} disabled={this.props.done}><FontAwesomeIcon icon={faClipboardCheck} /></button>}\n                </div>\n                <div className=\"col-1\">\n                    <button id=\"icon-buttons\" className=\"btn\" onClick={this.handleDelete} ><FontAwesomeIcon icon={faTrashAlt} /></button>\n                </div>\n\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default TaskItem;","import React from \"react\";\nimport TaskItem from './TaskItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\nclass ToDoTasks extends React.Component {\n    render() {\n        const tasks = this.props.tasks;\n        const dateSortedIncomplete = tasks.sort((a, b) => a.dateAdded - b.dateAdded);\n\n        return (\n            <div id=\"todo\" className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Tasks to do <FontAwesomeIcon icon={faClipboardList} /></h5>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-text\" >\n                        {dateSortedIncomplete.map(task => {\n                            return <TaskItem doneTaskFunc={this.props.doneTaskFunc} deleteTaskFunc={this.props.deleteTaskFunc} text={task.text} done={task.done} key={task.id} id={task.id} dateAdded={task.dateAdded} dateCompleted={task.dateCompleted} dueBy={task.dueBy} />\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoTasks;","import React from \"react\";\nimport TaskItem from './TaskItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\n\nclass CompletedTasks extends React.Component {\n    render() {\n        const tasks = this.props.tasks;\n        const dateSortedCompleted = tasks.sort((a, b) => b.dateCompleted - a.dateCompleted);\n\n        return (\n            <div id=\"done\" className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Completed <FontAwesomeIcon icon={faClipboardCheck} /></h5>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-text\">\n                        {dateSortedCompleted.map(task => {\n                            return <TaskItem deleteTaskFunc={this.props.deleteTaskFunc} text={task.text} done={task.done} key={task.id} id={task.id} dateAdded={task.dateAdded} dateCompleted={task.dateCompleted} dueBy={task.dueBy} />\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default CompletedTasks;","import React from \"react\";\nimport './TasksArea.css';\nimport ToDoTasks from \"./ToDoTasks\";\nimport CompletedTasks from \"./CompletedTasks\";\n\nclass TasksArea extends React.Component {\n    render() {\n        const completedTasks = this.props.tasks.filter(t => {\n            return t.done === true;\n        });\n\n        const incompleteTasks = this.props.tasks.filter(t => {\n            return t.done === false;\n        });\n        return (\n            <div className=\"row mx-auto appRow\">\n                <div id=\"to-do-tasks\" className=\" col-12 col-lg-6\">\n                    <ToDoTasks tasks={incompleteTasks} deleteTaskFunc={this.props.deleteTaskFunc} doneTaskFunc={this.props.doneTaskFunc} />\n                </div>\n                <div id=\"done-tasks\" className=\" col-12 col-lg-6\">\n                    <CompletedTasks tasks={completedTasks} deleteTaskFunc={this.props.deleteTaskFunc} />\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default TasksArea;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft, faQuoteRight} from '@fortawesome/free-solid-svg-icons';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"row appRow d-none d-md-block\">\n                <div className=\"mx-auto col-12 col-lg-9\">\n                    <div className=\"card bg-transparent text-white font-weight-lighter\">\n                        <div className=\"card-body\">\n                            <blockquote className=\"blockquote\">\n                                <div className=\"mb-0\"><FontAwesomeIcon icon={faQuoteLeft} /> And will you succeed? Yes! You will, indeed! (98 and &#190; &#160;percent guaranteed.) <FontAwesomeIcon icon={faQuoteRight} /></div>\n                                <footer className=\"blockquote-footer text-white\">Dr. Seuss <cite title=\"Source Title\">Oh the places you’ll go</cite></footer>\n                            </blockquote>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\"\nimport './App.css';\nimport moment from \"moment\";\nimport uuid from \"uuid/v4\";\nimport Header from './components/Header';\nimport AddTask from './components/AddTask';\nimport RemainingTasks from './components/RemainingTasks';\nimport TasksArea from './components/TasksArea';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n\n  state = {\n    tasks: [\n      { text: \"Second item added, first item to be completed\", id: uuid(), done: true, dateAdded: \"2019-10-15\", dateCompleted: \"2019-10-18\", dueBy: \"2019-11-10\" },\n      { text: \"Fifth item added, not yet complete\", id: uuid(), done: false, dateAdded: \"2019-10-23\", dateCompleted: null, dueBy: \"2019-11-15\" },\n      { text: \"Third item added, not completed\", id: uuid(), done: false, dateAdded: \"2019-10-16\", dateCompleted: null, dueBy: \"2019-12-10\" },\n      { text: \"Fourth item added, second item completed\", id: uuid(), done: true, dateAdded: \"2019-10-21\", dateCompleted: \"2019-10-25\", dueBy: \"2019-09-10\" },\n      { text: \"First item added, third item completed\", id: uuid(), done: true, dateAdded: \"2019-09-28\", dateCompleted: \"2019-10-28\", dueBy: \"2019-12-31\" },\n      { text: \"Sixth item added, still to be completed\", id: uuid(), done: false, dateAdded: \"2019-10-29\", dateCompleted: null, dueBy: \"2019-10-30\" },\n    ]\n  }\n\n  addNewTask = (taskText, dueByDate) => {\n    const tasksCopy = this.state.tasks.slice();\n    const newTask = {\n      text: taskText,\n      done: false,\n      dateAdded: moment().format(\"YYYY-MM-DD\"),\n      dateCompleted: new Date(),\n      dueBy: dueByDate,\n      id: uuid()\n    };\n\n    tasksCopy.push(newTask);\n\n    this.setState({\n      tasks: tasksCopy\n    });\n  }\n\n  doneTask = id => {\n    const updatedTasks = this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.done = true;\n        task.dateCompleted = new Date()\n      }\n      return task;\n    })\n\n    this.setState({\n      tasks: updatedTasks\n    });\n  }\n\n  deleteTask = id => {\n    const remainingTasks = this.state.tasks.filter(task => {\n      return task.id !== id\n    });\n\n    this.setState({\n      tasks: remainingTasks\n    })\n  }\n\n  convertDates = (tasks) => {\n    return tasks.map(task => {\n      task.dateAdded = new Date(task.dateAdded);\n      task.dueBy = new Date(task.dueBy);\n      task.dateCompleted = new Date(task.dateCompleted);\n      return task\n    })\n  }\n\n  render() {\n\n    const incompleteTasks = this.state.tasks.filter(task => {\n      return task.done ? false : true\n    });\n\n    const incompleteWithDateObj = this.convertDates(incompleteTasks);\n\n    const count = incompleteWithDateObj.filter(item => item.done === false).length\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <AddTask addNewTaskFunc={this.addNewTask} />\n        <RemainingTasks count={count} />\n        <TasksArea tasks={this.state.tasks} doneTaskFunc={this.doneTask} deleteTaskFunc={this.deleteTask} />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}